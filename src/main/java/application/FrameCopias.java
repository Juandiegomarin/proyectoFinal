/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package application;

import controllers.GeneracionJpaController;
import controllers.HabilidadJpaController;
import controllers.PokemonJpaController;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;

import java.time.LocalTime;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author Juan Diego
 */
public class FrameCopias <T> extends javax.swing.JFrame {

    /**
     * Creates new form FrameCopias
     */
    public FrameCopias() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonRealizarCopia = new javax.swing.JButton();
        botonRestaurar = new javax.swing.JButton();
        botonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonRealizarCopia.setText("Realizar copia de seguridad");
        botonRealizarCopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarCopiaActionPerformed(evt);
            }
        });

        botonRestaurar.setText("Restaurar copia de seguridad");

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(558, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonRestaurar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonRealizarCopia, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(545, 545, 545))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botonVolver)
                        .addGap(641, 641, 641))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(botonRealizarCopia, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addComponent(botonRestaurar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addComponent(botonVolver)
                .addGap(113, 113, 113))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
       
        FramePrincipal fm = new FramePrincipal();
        fm.setVisible(true);
        System.out.println(fm);
        this.dispose();
        
        
        
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonRealizarCopiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarCopiaActionPerformed
        
        LocalDate fechaAhora=LocalDate.now();
        LocalTime horaActual=LocalTime.now();
        
        
        
        String rutaCarpetaCopias="./copias";
        Path carpetaCopias=Paths.get(rutaCarpetaCopias);
        
        crearCarpeta(carpetaCopias);
        
        String nombreCarpetaGenerada=rutaCarpetaCopias+"/"+fechaAhora+"   "+horaActual.getHour()+"·"+horaActual.getMinute();
        Path carpetaGeneradaAhora=Paths.get(nombreCarpetaGenerada);
        
        crearCarpeta(carpetaGeneradaAhora);
        
        
        String rutaGeneracion=nombreCarpetaGenerada+"/generacion.csv";
        Path ficheroGeneracion=Paths.get(rutaGeneracion);
        
        crearFichero(ficheroGeneracion);
        
        
        
        String rutaPokemon=nombreCarpetaGenerada+"/pokemon.csv";
        Path ficheroPokemon=Paths.get(rutaPokemon);
        
        crearFichero(ficheroPokemon);
        
        
        String rutaHabilidad=nombreCarpetaGenerada+"/habilidad.csv";
        Path ficheroHabilidad=Paths.get(rutaHabilidad);
        
        crearFichero(ficheroHabilidad);
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("pokemon");
        
        GeneracionJpaController gc = new GeneracionJpaController(emf);
        PokemonJpaController pc = new PokemonJpaController(emf);
        HabilidadJpaController hc = new HabilidadJpaController(emf);
        
        
        
        
        escribirFichero(ficheroGeneracion, (List<T>) gc.findGeneracionEntities());
        escribirFichero(ficheroPokemon, (List<T>) pc.findPokemonEntities());
        escribirFichero(ficheroHabilidad, (List<T>) hc.findHabilidadEntities());
        
    }//GEN-LAST:event_botonRealizarCopiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameCopias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameCopias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameCopias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameCopias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameCopias().setVisible(true);
            }
        });
    }
    
    public static void crearCarpeta(Path nombreCarpeta) {

        try {
            Files.createDirectory(nombreCarpeta);
        } catch (IOException e) {
            System.out.println("Problema creando el directorio.");
            System.out.println(e.toString());
        }

    }
    
     public static void crearFichero(Path nombreFichero) {

        try {
            // Este método no crea el archivo si ya existe
            Files.createFile(nombreFichero);
        } catch (IOException e) {
            System.out.println("Problema creando el archivo.");
            System.out.println(e.toString());
        }
    }
     
     public void escribirFichero(Path p, List<T> lista) {

        String tmp = "";
        String linea = "";
        try (BufferedWriter flujo = new BufferedWriter(new FileWriter(p.toFile()))) {

            for (T t : lista) {

                tmp = t.toString();

                flujo.write(tmp);

                flujo.newLine();

            }
            // Metodo fluh() guarda cambios en disco 
            flujo.flush();
            System.out.println("Fichero " + p + " creado correctamente.");
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonRealizarCopia;
    private javax.swing.JButton botonRestaurar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
